// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Weiszfeld_init_rcpp
Rcpp::List Weiszfeld_init_rcpp(const arma::mat X, const arma::rowvec init, const arma::rowvec weights, const double epsilon, int nitermax);
RcppExport SEXP _RobRegression_Weiszfeld_init_rcpp(SEXP XSEXP, SEXP initSEXP, SEXP weightsSEXP, SEXP epsilonSEXP, SEXP nitermaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type init(initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type nitermax(nitermaxSEXP);
    rcpp_result_gen = Rcpp::wrap(Weiszfeld_init_rcpp(X, init, weights, epsilon, nitermax));
    return rcpp_result_gen;
END_RCPP
}
// WeiszfeldCovMat_init_rcpp
Rcpp::List WeiszfeldCovMat_init_rcpp(const arma::mat X, const arma::mat init_cov, const arma::rowvec median_est, const arma::rowvec weights, const double epsilon, int nitermax);
RcppExport SEXP _RobRegression_WeiszfeldCovMat_init_rcpp(SEXP XSEXP, SEXP init_covSEXP, SEXP median_estSEXP, SEXP weightsSEXP, SEXP epsilonSEXP, SEXP nitermaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type init_cov(init_covSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type median_est(median_estSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type nitermax(nitermaxSEXP);
    rcpp_result_gen = Rcpp::wrap(WeiszfeldCovMat_init_rcpp(X, init_cov, median_est, weights, epsilon, nitermax));
    return rcpp_result_gen;
END_RCPP
}
// Gmedianrowvec_init_rcpp
Rcpp::NumericVector Gmedianrowvec_init_rcpp(const arma::mat X, const arma::rowvec init, const arma::rowvec weights, const double gamma, const double alpha, const int nstart, const double epsilon);
RcppExport SEXP _RobRegression_Gmedianrowvec_init_rcpp(SEXP XSEXP, SEXP initSEXP, SEXP weightsSEXP, SEXP gammaSEXP, SEXP alphaSEXP, SEXP nstartSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type init(initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const int >::type nstart(nstartSEXP);
    Rcpp::traits::input_parameter< const double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(Gmedianrowvec_init_rcpp(X, init, weights, gamma, alpha, nstart, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// MedianCovMatRow_init_rcpp
Rcpp::NumericMatrix MedianCovMatRow_init_rcpp(const arma::mat X, const arma::mat init_cov, const arma::rowvec Gmedian, const arma::rowvec weights, const double gamma, const double alpha, const int nstart);
RcppExport SEXP _RobRegression_MedianCovMatRow_init_rcpp(SEXP XSEXP, SEXP init_covSEXP, SEXP GmedianSEXP, SEXP weightsSEXP, SEXP gammaSEXP, SEXP alphaSEXP, SEXP nstartSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type init_cov(init_covSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Gmedian(GmedianSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const int >::type nstart(nstartSEXP);
    rcpp_result_gen = Rcpp::wrap(MedianCovMatRow_init_rcpp(X, init_cov, Gmedian, weights, gamma, alpha, nstart));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RobRegression_Weiszfeld_init_rcpp", (DL_FUNC) &_RobRegression_Weiszfeld_init_rcpp, 5},
    {"_RobRegression_WeiszfeldCovMat_init_rcpp", (DL_FUNC) &_RobRegression_WeiszfeldCovMat_init_rcpp, 6},
    {"_RobRegression_Gmedianrowvec_init_rcpp", (DL_FUNC) &_RobRegression_Gmedianrowvec_init_rcpp, 7},
    {"_RobRegression_MedianCovMatRow_init_rcpp", (DL_FUNC) &_RobRegression_MedianCovMatRow_init_rcpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_RobRegression(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
